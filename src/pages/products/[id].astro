---
import Product from "../../components/product.vue"
import Layout from "../../layouts/Layout.astro"
export const prerender =  false
const {id} = Astro.params
let title = ''
let description = ''
// let products =  [
// 	{   
// 		id: "121",
// 		title: "Iphone 13 pro",
// 		description:'iphone 13 pro description'
		
// 	},
// 	{   
// 		id: "122",
// 		title: "Iphone 14 pro",
// 		description:'iphone 14 pro description'
// 	},
// 	{
// 		id: "123",
// 		title: "Iphone 15 pro",
// 		description:'iphone 15 pro description'
// 	},
// ]	
	async function getData() {
		return (await fetch('https://jsonplaceholder.typicode.com/posts/1')).json()
	}
    let apiData = await getData()
	title = apiData.title
	description = apiData.body
---
<Layout metaData={{title,description}}>
	<div class="mt-24 flex justify-center items-center">
		<Product id={id} />
	</div>
</Layout>
<style scoped>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>